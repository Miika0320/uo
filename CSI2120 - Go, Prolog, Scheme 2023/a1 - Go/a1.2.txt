// Mikaela Dobie 300164161 Q2

package main

import "fmt"

func fct(line []float64) {
	for _, v := range line {
		fmt.Printf("%f, ", v)
	}
}

func fct2(matrix [][]float64) {
	matrix[2][0] = 12345.6
}
func main() {
	// array := [][]float64{{7.1, 2.3, 1.1},
	// {4.3, 5.6, 6.8},
	// {2.3, 2.7, 3.5},
	// {4.5, 8.1, 6.6}}

	array := [][]float64{{1.1, 7.3, 3.2, 0.3, 3.1},
		{4.3, 5.6, 1.8, 5.3, 3.1},
		{1.3, 2.7, 3.5, 9.3, 1.1},
		{7.5, 5.1, 0.6, 2.3, 3.9}}

	//fct2(array)
	//sort(array[2])
	//transpose(array)
	//fct(array[2][:])
	fmt.Printf("\n")
	for _, v := range array {
		fmt.Printf("%f, ", v)
	}
	sortRows(array)
	array = transpose(array)
	sortRows(array)
	array = transpose(array)
	fmt.Printf("\n")
	for _, v := range array {
		fmt.Printf("%f, ", v)
	}

}

func sort(tab []float64) {
	var temp float64
	for i := 0; i < len(tab); i++ {
		for j := 0; j < len(tab); j++ {
			if tab[i] < tab[j] {
				temp = tab[i]
				tab[i] = tab[j]
				tab[j] = temp
			}
		}
	}

}

func transpose(tab [][]float64) [][]float64 {
	temp := []float64{}
	array := [][]float64{{}}
	//tab =
	for i := 0; i < len(tab[0]); i++ {
		for j := 0; j < len(tab); j++ {
			temp = append(temp, tab[j][i])

		}
		if i == 0 {
			array[0] = temp
		} else {
			array = append(array, temp)
		}
		temp = []float64{}
	}
	return array

}

func sortRows(tab [][]float64) {
	for j := 0; j < len(tab); j++ {
		sort(tab[j])
	}
}
